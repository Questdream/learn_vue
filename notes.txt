1.使用vue的两种方式
    直接引入vue.js文件
        对于制作原型或学习，你可以这样使用最新版本：
        <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>

    基于Node环境创建Vue项目（使用vue/cli创建初始化一个vue项目)
        npm install -g @vue/cli
        vue create 项目名称
        npm run serve
    
    补充：先安装node，在安装node的时候，npm也同时安装

2.元素和vue对象绑定
    绑定文本： {{}}
    绑定属性： v-bind(:)
    绑定事件（事件修饰符）：v-on(@)

3.组件化开发概述
    大家可以吧组件理解成一个可以自定义的强大功能的标签
        链接：html的a标签
        登录：.vue组件，登录
        轮播图：.vue组件，轮播图


三 模板语法
    v-if
    v-show
    v-for

    组件嵌套
        组件命名：大写字母开头，驼峰命名
        注册组件
        组件传值

四 组件传值
    组件之间的关系
    1.父级向子级传递数据  
        使用属性传值
    2.子级向父级传递数据
        使用自定义事件
    3.非父子级传递数据
        定义一个共享数据的状态（state）

    总结：
        将系统拆分成组件，一方面降低了功能的耦合，但另一方面也提升了数据传输难度。
        这里的利弊得失需要大家在项目中不断摸索